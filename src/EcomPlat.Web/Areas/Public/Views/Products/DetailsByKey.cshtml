@using EcomPlat.Web.Constants
@using Microsoft.Extensions.Caching.Memory
@model EcomPlat.Data.Models.Product
@inject NowPayments.API.Interfaces.INowPaymentsService nowPaymentsService
@inject Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache

@{
    ViewData["Title"] = Model.Name;

    var mainLarge = Model.Images.FirstOrDefault(i => i.IsMain && i.Size == EcomPlat.Data.Enums.ImageSize.Large)
                    ?? Model.Images.FirstOrDefault(i => i.Size == EcomPlat.Data.Enums.ImageSize.Large);

    string selectedCurrency = Context.Request.Cookies["currency"] ?? EcomPlat.Data.Enums.Currency.USD.ToString();
    bool showConverted = !string.IsNullOrWhiteSpace(selectedCurrency) && selectedCurrency.ToLower() == EcomPlat.Data.Enums.Currency.XMR.ToString().ToLower();
    string cacheKey = EcomPlat.Web.Constants.StringConstants.CacheKeyConversion;
    decimal conversionRate = 0;

    if (showConverted)
    {
        if (!memoryCache.TryGetValue(cacheKey, out conversionRate))
        {
            var estimateTask = nowPaymentsService.GetEstimatedConversionAsync(1m, EcomPlat.Data.Enums.Currency.USD.ToString(), EcomPlat.Data.Enums.Currency.XMR.ToString());
            estimateTask.Wait();
            var estimate = estimateTask.Result;
            conversionRate = estimate.EstimatedAmount;

            var cacheEntryOptions = new Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions()
                .SetAbsoluteExpiration(TimeSpan.FromMinutes(5));

            memoryCache.Set(cacheKey, conversionRate, cacheEntryOptions);
        }
    }
}

<h2>@Model.Name</h2>

<div class="row">
    <div class="col-md-6">
        <div id="mainImageContainer">
            @if (mainLarge != null)
            {
                <img id="mainImage" src="@mainLarge.ImageUrl" alt="@Model.Name" class="img-fluid" />
            }
            else
            {
                <p>No image available</p>
            }
        </div>
    </div>
    <div class="col-md-6">
        <dl class="row">
            <dt class="col-sm-4">Price</dt>
            <dd class="col-sm-8">
                @EcomPlat.Utilities.Helpers.CurrencyFormatter.Format(Model.Price, conversionRate, selectedCurrency)
            </dd>
            @if (Model.SalePrice.HasValue)
            {
                <dt class="col-sm-4">Sale Price</dt>
                <dd class="col-sm-8">
                    @EcomPlat.Utilities.Helpers.CurrencyFormatter.Format(Model.SalePrice.Value, conversionRate, selectedCurrency)
                </dd>
            }
            <dt class="col-sm-4">Category</dt>
            <dd class="col-sm-8">
                @if (Model.Subcategory?.Category != null)
                {
                    <a asp-area="Public"
                       asp-controller="Products"
                       asp-action="Index"
                       asp-route-categoryKey="@Model.Subcategory.Category.CategoryKey"
                       asp-route-subCategoryKey=""
                       class="text-decoration-none">
                        @Model.Subcategory.Category.Name
                    </a>
                    @: &gt;
                    <a asp-area="Public"
                       asp-controller="Products"
                       asp-action="Index"
                       asp-route-categoryKey="@Model.Subcategory.Category.CategoryKey"
                       asp-route-subCategoryKey="@Model.Subcategory.SubcategoryKey"
                       class="text-decoration-none">
                        @Model.Subcategory.Name
                    </a>
                }
                else
                {
                    <span>No Category</span>
                }
            <dt class="col-sm-4">Company</dt>
            <dd class="col-sm-8">@Model.Company?.Name</dd>
            <dt class="col-sm-4">Country of Origin</dt>
            <dd class="col-sm-8">
                <div class="flag-line">
                    <div class="flag-container">
                        <img src="@(Url.Content("~/images/flags/" + Model.CountryOfOrigin.ToLower() + ".png"))"
                             alt="@Model.CountryOfOrigin" />
                    </div>
                    <span>@EcomPlat.Utilities.Helpers.CountryHelper.GetCountryName(Model.CountryOfOrigin)</span>
                </div>
            </dd>
            <dt class="col-sm-4">In Stock</dt>
            <dd class="col-sm-8">@(Model.IsAvailable ? "Yes" : "No")</dd>

            <dt class="col-sm-4">Product Weight (oz)</dt>
            <dd class="col-sm-8">@Model.ProductWeightOunces.ToString("F2")</dd>

            <dt class="col-sm-4">Shipping Weight (oz)</dt>
            <dd class="col-sm-8">@Model.ShippingWeightOunces.ToString("F2")</dd>

            <dt class="col-sm-4">Dimensions (L x W x H in)</dt>
            <dd class="col-sm-8">
                    @Model.LengthInches.ToString("F2") x @Model.WidthInches.ToString("F2") x @Model.HeightInches.ToString("F2")
            </dd>

                @if (!string.IsNullOrWhiteSpace(Model.Upc))
                {
                <dt class="col-sm-4">UPC</dt>
                <dd class="col-sm-8">@Model.Upc</dd>
                }
        </dl>

        <form asp-area="Public" asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
            <input type="hidden" name="productId" value="@Model.ProductId" />
            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" value="1" min="1" class="form-control" style="width:100px;" />
            </div>
            <button type="submit" class="btn btn-success mt-2">Add to Cart</button>
        </form>
        <br />
        <p>@Model.Description</p>
    </div>
</div>

<hr />

@{
    var smallImages = Model.Images
                        .Where(i => i.Size == EcomPlat.Data.Enums.ImageSize.Small)
                        .OrderBy(i => i.DisplayOrder)
                        .ToList();
}

@if (smallImages.Any())
{
    <h4>Other Images</h4>
    <div class="row">
        @foreach (var small in smallImages)
        {
            var largeVariant = Model.Images.FirstOrDefault(i => i.Size == EcomPlat.Data.Enums.ImageSize.Large &&
            i.ImageGroupGuid == small.ImageGroupGuid);
            <div class="col-auto mb-2">
                <img src="@small.ImageUrl" alt="Thumbnail" class="thumbnail-img"
                     data-large="@largeVariant?.ImageUrl" data-product-key="@Model.ProductKey"
                     style="width:100px; height:100px; object-fit:cover; cursor:pointer;" />
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".thumbnail-img").click(function (e) {
                e.preventDefault();
                var img = $(this);
                var newSrc = img.data("large");
                if(newSrc){
                    $("#mainImage").attr("src", newSrc);
                } else {
                    alert("Large image not available for this thumbnail.");
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
