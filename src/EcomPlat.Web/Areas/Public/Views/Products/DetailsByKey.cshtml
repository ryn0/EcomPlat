@model EcomPlat.Data.Models.Product

@{
    ViewData["Title"] = Model.Name;

    // Get the main large image: first try for a large variant flagged as main,
    // otherwise fallback to any large image.
    var mainLarge = Model.Images.FirstOrDefault(i => i.IsMain && i.Size == EcomPlat.Data.Enums.ImageSize.Large)
                    ?? Model.Images.FirstOrDefault(i => i.Size == EcomPlat.Data.Enums.ImageSize.Large);
}
<h2>@Model.Name</h2>

<div class="row">
    <div class="col-md-6">
        <div id="mainImageContainer">
            @if (mainLarge != null)
            {
                <img id="mainImage" src="@mainLarge.ImageUrl" alt="@Model.Name" class="img-fluid" />
            }
            else
            {
                <p>No image available</p>
            }
        </div>
    </div>
    <div class="col-md-6">
        <dl class="row">
            <dt class="col-sm-4">Price</dt>
            <dd class="col-sm-8">@Model.Price.ToString("C")</dd>
            @if (Model.SalePrice.HasValue)
            {
                <dt class="col-sm-4">Sale Price</dt>
                <dd class="col-sm-8">@Model.SalePrice.Value.ToString("C")</dd>
            }
            <dt class="col-sm-4">Company</dt>
            <dd class="col-sm-8">@Model.Company?.Name</dd>
            <dt class="col-sm-4">Country of Origin</dt>
            <dd class="col-sm-8">@EcomPlat.Utilities.Helpers.CountryHelper.GetCountryName(Model.CountryOfOrigin)</dd>
            <dt class="col-sm-4">Category</dt>
            <dd class="col-sm-8">@Model.Subcategory?.Category?.Name > @Model.Subcategory?.Name</dd>
            <dt class="col-sm-4">In Stock</dt>
            <dd class="col-sm-8">@(Model.IsAvailable ? "Yes" : "No")</dd>
        </dl>
        <p>@Model.Description</p>
    </div>
</div>

<hr />

@{
    // Get all small image variants
    var smallImages = Model.Images
                        .Where(i => i.Size == EcomPlat.Data.Enums.ImageSize.Small)
                        .OrderBy(i => i.DisplayOrder)
                        .ToList();
}

@if (smallImages.Any())
{
    <h4>Other Images</h4>
    <div class="row">
        @foreach (var small in smallImages)
        {
            // Look up the corresponding large variant from the same group.
            var largeVariant = Model.Images.FirstOrDefault(i => i.Size == EcomPlat.Data.Enums.ImageSize.Large
            && i.ImageGroupGuid == small.ImageGroupGuid);
            <div class="col-auto mb-2">
                <img src="@small.ImageUrl" alt="Thumbnail" class="thumbnail-img"
                     data-large="@largeVariant?.ImageUrl" data-product-key="@Model.ProductKey"
                     style="width:100px; height:100px; object-fit:cover; cursor:pointer;" />
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".thumbnail-img").click(function (e) {
                e.preventDefault();
                var img = $(this);
                // Retrieve the large image URL from the data attribute.
                var newSrc = img.data("large");
                if(newSrc){
                    $("#mainImage").attr("src", newSrc);
                } else {
                    alert("Large image not available for this thumbnail.");
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
